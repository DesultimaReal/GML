<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_vera_Wdown</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_char_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Specific Var Setup
event_inherited();
//Info
firstName = "Vera";
lastName = "Farine";

//Animations
myAnims[0] = spr_vera_Wup;
myAnims[1] = spr_vera_Wleft;
myAnims[2] = spr_vera_Wdown;
myAnims[3] = spr_vera_Wup;
myAnims[4] = spr_vera_Wright
myAnims[5] = spr_vera_Sright;;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!inCombat)//No movement in combat
{
    if(keyboard_check(ord("D")))
    {
    x += playerSpeed;
    image_speed = playerSpeed / (room_speed/2.5);
    sprite_index = spr_sara_Wright;
    }
    if(keyboard_check(ord("W")))
    {
    y -= playerSpeed;
    image_speed = playerSpeed / (room_speed/2.5);
    sprite_index = spr_sara_Wup;
    }
    if(keyboard_check(ord("A")))
    {
    x -= playerSpeed;
    image_speed = playerSpeed / (room_speed/2.5);
    sprite_index = spr_sara_Wleft;
    }
    if(keyboard_check(ord("S")))
    {
    y += playerSpeed;
    image_speed = playerSpeed / (room_speed/2.5);
    sprite_index = spr_sara_Wdown;
    }
    //Check to see when the player isn't pressing a key and default to still
    if(keyboard_check_released(ord("D")) || keyboard_check_released(ord("W")) 
    || keyboard_check_released(ord("A")) || keyboard_check_released(ord("S")))
    {
        image_speed = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Stamina
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage the enemy
if(playerAttacking)
{
    image_speed = 0;
    image_index = 0;
    enemyParty[enemyChosen].currentHealth -= (damage -  enemyParty[enemyChosen].defense);
    selectingEnemy = false;
    playerAttacking = false;
    isSelectingPlayer = true;
    isAttacking = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
