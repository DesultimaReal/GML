<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
//Movement
grav = 0.2;
hsp = 0;
vsp = 0;
hsp_carry = 0;
movespeed = 4;
//Jumps
jumps = 0;
jumpsmax = 2;
//Jumpspeed
jumpspeed_normal = 7;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal;
//DrillVariables
DrillNotOut = true;
DrillTime = 25;
//key_drop
key_drop = 0;
//WallJump
move_lock = false;
grounded = false;
//Items//Inventory
CopperCarried = 0;
EmeraldCarried = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DrillNotOut = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Jumpspeed
move_lock = false
jumpspeed = jumpspeed_normal;
sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Player Input
if(DrillNotOut){
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
key_dig = keyboard_check(vk_down);
key_drop = keyboard_check(vk_lshift);
}
//move = key_left + key_right;
if(move_lock) = false
{
    move = key_left + key_right;
}
//Check Floor

hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav; //Terminal Velocity

if (place_meeting(x,y+1,obj_Mineral)) //Are we on the floor
{
    if(!key_dig){
        jumps = jumpsmax;
    }
    else{
        if(DrillNotOut){
        instance_create(x,y+24, obj_drill)
        alarm[1] = DrillTime;
        DrillNotOut = false;
        }
    }
    vsp = key_jump * -jumpspeed;
    grounded = true;
}
else
{
    grounded = false;
}
if(key_jump) &amp;&amp; (jumps &gt; 0){ 

jumps -= 1;
vsp = -jumpspeed;

}

//Shauns 23-whatever code
if (key_jump) and place_meeting(x + 1, y, obj_Mineral) and grounded = false
{
    vsp = -jumpspeed;
    move = -1
    move_lock = true
    alarm[0] = 10 // Experiment with this for your player to push off farther
}
if (key_jump) and place_meeting(x - 1, y, obj_Mineral) and grounded = false
{
    vsp = - jumpspeed;
    move = 1
    move_lock = true
    alarm[0] = 10 // You'll want this the same as the alarm[0] above.
}

var hsp_final = hsp + hsp_carry;
hsp_carry = 0;


//horizontal collision check
if(place_meeting(x+hsp_final,y,obj_Mineral)){
    //Colliding
    while(!place_meeting(x+sign(hsp_final),y,obj_Mineral))//While we arent hitting a wall
    {
        x+=sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}
x+= hsp_final;

//vertical collision check
if(place_meeting(x,y+vsp,obj_Mineral)){
    //Colliding
    while(!place_meeting(x,y+sign(vsp),obj_Mineral))//While we arent hitting a wall
    {
        y+=sign(vsp);
    }
    vsp = 0;
}
y+= vsp;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_em_piece">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect Copper
with(other) 
{
    instance_destroy();
    //audio_play_sound(snd_expr, 6, false);
}
obj_player.EmeraldCarried += 2;
///Level up code
//with(object_player_stats){
//   hp = min(hp+1, maxhp);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cplarge">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect Copper
with(other) 
{
    instance_destroy();
    //audio_play_sound(snd_expr, 6, false);
}
obj_player.CopperCarried += 2;
///Level up code
//with(object_player_stats){
//   hp = min(hp+1, maxhp);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect Copper
with(other) 
{
    instance_destroy();
    //audio_play_sound(snd_expr, 6, false);
}
obj_player.CopperCarried += 1;
///Level up code
//with(object_player_stats){
//   hp = min(hp+1, maxhp);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
