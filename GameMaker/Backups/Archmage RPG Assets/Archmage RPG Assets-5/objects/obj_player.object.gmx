<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_shadow_parent</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Player sprite variables
image_speed = 0;
CanDrawAgain = true;
///Create character parts
var head = instance_create(x,y,obj_head);
head.creator = id;

var cape_top = instance_create(x,y,obj_cape_top);
cape_top.creator = id;

with (cape_top){
    var cape_middle = instance_create(x, y, obj_cape_middle);
    cape_middle.creator = id;
    cape_middle.lag = true;
    
    var cape_bottom = instance_create(x, y, obj_cape_bottom);
    cape_bottom.creator = id;
    cape_bottom.lag = true;
}
beamspell = false;
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Beam draw delay alarm

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Comment: Spell reset
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the player, point the player to the mouse
image_angle = point_direction(x,y,mouse_x, mouse_y);

//Get the input
var right = keyboard_check(vk_right) || keyboard_check(ord('D'));
var left = keyboard_check(vk_left) || keyboard_check(ord('A'));
var up = keyboard_check(vk_up) || keyboard_check(ord('W'));
var down = keyboard_check(vk_down) || keyboard_check(ord('S'));

//Move the player
if (right) {
    motion_add(0,1);
}
if (left) {
    motion_add(180,1);
}
if (up) {
    motion_add(90,1);
}
if (down) {
    motion_add(270,1);
}
beamspell = false;
//Fire spell
if(mouse_check_button(mb_left)){
    if(alarm[0] = -1 &amp;&amp; global.spellcost &lt;= global.mana){
        image_index = 5;
        if (global.spell == obj_beamspell){
            //Be firing the beamspell
            beamspell = true;
        }
        else{
            instance_create(x,y, global.spell);
        }
        global.mana -= global.spellcost;
    }
}else{
    image_index = 0;
    if(global.mana &lt;global.maxmana){ //Regen mana
        global.mana += global.maxmana/50;
        if(global.mana &gt; global.maxmana){
            global.mana = global.maxmana;   
        }
    }
}
//Dont move too fast
if (speed &gt;= 4) speed = 4;

if(!right &amp;&amp; !left &amp;&amp; !up &amp;&amp; !down){
    friction = 1;
}
else{
    friction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BEAM SPELL

draw_self();

//If our beam spell is true, while we are left clicking
if(beamspell){
    var len = 0;
    var maxlen = 512;
    //While our beam isnt max length and isnt hitting a rat
    while(len &lt; maxlen &amp;&amp; !position_meeting(x+lengthdir_x(len, image_angle), 
                                           y+lengthdir_y(len, image_angle), 
                                           obj_enemy_rat)){

        draw_sprite_ext(spr_beam_spell, 0, x+lengthdir_x(len, image_angle), 
                y+lengthdir_y(len, image_angle), 1, 1, image_angle, c_white, 1);
        part_particles_create
        (global.ps, 
        x+lengthdir_x(len, image_angle)-5+random(10), 
        y+lengthdir_y(len, image_angle)-5+random(10), 
        global.pt_spark, 4);
        //Extend its length by 4 slowly
        len += 1;
    }
    var hit = instance_position(x+lengthdir_x(len, image_angle), 
    y+lengthdir_y(len, image_angle), obj_enemy_rat);
    if(hit){
        hit.hp -= .5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
